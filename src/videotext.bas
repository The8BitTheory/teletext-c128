#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0 VDC,uppercase,10,10
1 TRAP 60000

5 ML=DEC("3500"):BE=PEEK(4624)+PEEK(4625)*256
7 IF ML<=BE THEN PRINT "BASIC PROGRAM TOO LARGE. ENDS AT $"HEX$(BE):END

10 GRAPHIC0:DD=PEEK(186)
#15 PRINT "INSERT DISK AND PRESS KEY TO CONTINUE":GETKEY I$

20 PRINT"LOADING VDCBASIC...";:BLOAD"VDCBASIC2G.1300",U(DD),B0:PRINT"DONE"
22 SYS DEC("1300")

#  RESET VDC-CHIP. JUST IN CASE THIS WASN'T A FRESH START
23 RST 3

25 SF=RGD(255)
30 IF SF=0 THEN PRINT "64KB VRAM BENOETIGT, SORRY.":END

# GET NR OF SCREEN ROWS. 32 MEANS NTSC, 39 MEANS PAL
35 TN=RGD(4):SO=25+90*80:AO=25+10*80

# REG 4*REG 9 = 320
# 35*9=315

# 4: TOTAL NR OF SCREEN ROWS (DEFAULT: 39 FOR PAL) -> 35
# 5: VERT FILLER: 5
# 6: VISIBLE NR OF SCREEN ROWS (DEFAULT: 25). WE WANT 26?
# 9: SCANLINES PER CHARACTER: (DEFAULT: 7) WE WANT 9 (VALUE 8). NEEDED FOR ATTRIBUTE-RAM.

40 RGO 28,16:REM 64K VRAM
42 RGO 25,128:REM BITMAP MODE ON

# REGISTER 4
# 35 CHARACTERLINES FOR PAL
# 29 CHARACTERLINES FOR NTSC
#44 RGW 4,35

# REGISTER 5
# 5 EXTRA LINES FOR PAL
# 3 EXTRA LINES FOR NTSC
#46 RGW 5,5

44 IF TN>35 THEN RGW4,35:RGW5,5
46 IF TN=32 THEN RGW4,29:RGW5,3


48 RGW 9,8
#49 RGW 1,78

50 RGW 36,0

# I$() HOLDS THE THREE DIGITS FOR THREE PAGES
# IX HOLDS THE CURRENTLY ENTERED DIGIT (0-2)
# S$() HOLDS THE TWO DIGITS FOR SUBPAGES (99 MAX)
# SM HOLDS THE HIGHEST POSSIBLE SUBPAGE
# SX IS THE NUMERIC VALUE OF THE CURRENT SUBPAGE
# S(): SCREEN-RAM ADDRESSES
# A(): ATTRIBUTE-RAM ADDRESSES
# R:RAM-OFFSET (0 OR 1) FOR VISIBLE SCREEN BUFFER
80 DIM I$(2):I$(0)="1":I$(1)="0":I$(2)="0":IX=0:F=-1
81 DIM S$(1):S$(0)="0":S$(1)="1":SM=1:SX=1:R=1
82 DIM LP(3),S(1),A(1),DM$(2),OM$(1)

# IZ:INPUT LOW (MIN ALLOWED VALUE)
# IO:INPUT ONE (MIN ALLOWED VALUE FOR FIRST DIGIT)
# IH:INPUT HIGH (MAX ALLOWED VALUE)
85 IZ=ASC("0"):IE=ASC("8"):IN=ASC("9"):IO=ASC("1")

# SO:SCREEN-OFFSET 0 OR 20000
# AO:ATTRIBUTE-OFFSET 0 OR 20000
86 S(0)=0:A(0)=18000:S(1)=20000:A(1)=38000:DA=DEC("B800")

88 DM$(0)="OFF":DM$(1)="HTML":DM$(2)="VTX "
89 OM$(0)="OFF":OM$(1)="ON"

#  CLEAR SCREEN
100 DISP S(R):ATTR A(R)
105 GOSUB 500

#  DISPLAY BOTTOM HELP LINE
107 GOSUB 2200

#   LOAD CHARSET AND COPY IT TO VRAM
110 BLOAD"TXTCHARSET3.VDC",U(DD),B0,P(BE+8192)
120 FL=PEEK(174)+PEEK(175)*256-BE
130 RTV BE+8192,56*1024,FL
140 VCS 56*1024,2,9,80

200 BLOAD"C128TEXT.BIN",U(DD),B0

#   INIT MAKES SURE TO WRITE IMPORTANT MEMORY ADDRESSES TO $FD
210 SYS ML+6:RREG RV

#   READ ADDRESS OF LOCAL TIME
220 LT=PEEK(DEC("FB"))+PEEK(DEC("FC"))*256
225 PRINT "LOCAL TIME AT $"HEX$(LT)

#   READ ADDRESS OF HTML CONTENT
230 C0=PEEK(DEC("FD"))+PEEK(DEC("FE"))*256
235 PRINT:PRINT "CONTENT AT $"HEX$(C0)

240 IF RV<>0 THEN GOSUB 2000:GOTO300

#   GET IP
#220 SYS ML+3

#   REQUEST PAGE 100
300 VMP S(R)+20,"HOLE SEITE   "
302 IF F THEN FAST

304 GOSUB 1000
305 IF DM=1 THEN GOSUB 900

307 R=ABS(R-1)

#   CLEAR SCREEN
308 GOSUB 500

309 VMP S(ABS(R-1))+40,"."

310 IF RL=0 THEN 2100

#   WRITE CURRENT PAGE NR
320 FOR X=0 TO 2
324  VMP S(R)+X+X,I$(X)
326 NEXT

#   DISPLAY LAST REQUESTED PAGE
#   PRINT LINES TO VRAM

330 P=S(R)+720:CT=C0:S=TI:Q=C0+1024:QT=A(R)+18080
335 FOR X=0TO22
340  VMB P,CT,39
345  CT=CT+39:P=P+720
350 NEXT

352 VMP S(ABS(R-1))+42,"."

353 GOSUB 2200

# COPY 1000 BYTES OF ATTRIBUTE-RAM TO VRAM
355 RTV C0+1024,40000,1000

# IF WE'RE IN OFFLINE MODE, NO NEED TO GET SUBPAGE INFO
359 IF OM>0 THEN 380

360 S=TI-S
365 PRINT "COPY TO VRAM TOOK "S" JIFFIES"

# LOAD NAV-DATA TO KNOW ABOUT SUBPAGES
370 I=ASC(I$(0))OR128
372 I$(0)=CHR$(I)

#   COPY C0 TO SAVE AREA $B800 (47104)
373 IF DM=2 THEN SYS ML+15

#   GET NAVPAGE WITHOUT PARSING FILENAME ETC
374 GOSUB 1010

376 VMP S(ABS(R-1))+44,"."

#   1100 EXTRACT SUBPAGE INFO FROM RESPONSE
378 S=TI:GOSUB 1100

379 IF DM=2 THEN GOSUB 950

380 AS=40000:AD=A(R)+80:VMP S(ABS(R-1))+44,"."

# COPY ATTRIBUTE-RAM. WE HAVE TO DOUBLE EACH BYTE
#  COPY FROM C0+1024 TO 18080, 1 BYTE, REPEAT 250 TIMES, TARGET ADDRESS INCR 2
#  COPY FROM C0+1024 TO 18081, 1 BYTE, REPEAT 250 TIMES, TARGET ADDRESS INCR 2
#  DO THIS 4 TIMES, INCREASING SOURCE AND TARGET ADDRESSES BY 250

382 FOR X=0 TO 22
384  VMC AS,AD,1,39,2:V=VMD(AS+38):VMF AD+78,V,2:VMP S(R)+(X+1)*720+78," "
386  VMC AS,AD+1,1,39,2
388  AS=AS+39:AD=AD+80
389 NEXT


#   PRINT TO TOP ROW (EG 1/3)
390 VMP S(R)+10,"         "
391 VMP S(R)+10,MID$(STR$(SX),2)+"/"+MID$(STR$(SM),2)

393 IF OM>0 THEN VMP S(R)+46,"OFFLINE MODUS":GOTO 396

#   WRITE LOCAL TIME
394 SYS ML+12
395 VMB S(R)+42,LT,19

396 DISP S(R):ATTR A(R)

#   REMOVE HIGHEST BIT FROM FIRST DIGIT, SO NEXT REQUEST IS REGULAR AGAIN
397 I=ASC(I$(0))AND127:I$(0)=CHR$(I)
398 S=TI-S:PRINT "POST-SUB TOOK"S"JIFFIES"

399 SLOW

400 IF LM THEN 1600

#   GET USER INPUT
405 GETKEY I$

#   IL = LOWEST ALLOWED INPUT VALUE, IH=HIGHEST ALLOWED.
#    FIRST DIGIT GOES FROM 1 TO 8, ALL OTHERS FROM 0 TO 9
415 I=ASC(I$):IF IX=0 THEN IL=IO:IH=IE:ELSE IL=IZ:IH=IN

#   DIGITS. AFTER 600, GOES TO EITHER 400 (MORE DIGITS) OR 300 (LOAD PAGE)
420 IF I>=IL AND I<=IH THEN GOTO 600

#   DOWNLOAD ALL PAGES
#440 IF I$="D" THEN 700
445 IF I$="D" THEN 1800
450 IF I$="X" THEN SLOW:END
460 IF I$="R" THEN 300
470 IF I$="F" THEN F=ABS(F)-1:PRINT "FAST MODE:"F:GOTO 400
480 IF I$="+" THEN 1300
481 IF I$="-" THEN 1200
485 IF I$="L" THEN 1400
490 IF I$="Q" THEN 1700
495 IF I$="O" THEN 1900

498 PRINT CHR$(7);
499 GOTO 400

################
# CLEAR SCREEN #
################
# FIRST LINE (WHITE TEXT ON BLACK BACKGROUND)
500 VMF S(R),255,720
510 VMF A(R),DEC("F0"),80

#  BODY OF PAGE (LINES 1-25)
520 VMF S(R)+720,0,18000-1420
530 VMF A(R)+80,DEC("0F"),1840

599 RETURN


######################
# HANDLE DIGIT INPUT #
######################

600 I$(IX)=I$
#610 PRINT IX":"I$"/"I
610 VMP S(R)+IX+IX,I$
620 VMF A(R)+IX+IX,DEC("B0"),2
630 IX=IX+1

#   LESS THAN 3 DIGITS, WAIT FOR NEXT INPUT
640 IF IX<=2 THEN 400
#   3 DIGITS ENTERED, LOAD PAGE
650 IF IX>2 THEN IX=0:S$(0)="0":S$(1)="1":SX=1:GOTO 300


######################
# DOWNLOAD ALL PAGES #
######################
# THE HTML VERSION, NOT THE PARSED ONE.
# SO WE CAN PRESERVE THE ORIGINAL STATE AND IMPROVE THE PARSER ON THAT
# PH:PAGE HUNDRED
# PT:PAGE TEN
# PO=PAGE ONE
700 REM FOR PH=1 TO 9
705  I$(0)="8":REM I$(0)=RIGHT$(STR$(PH),1)
710  FOR PT=3 TO 5
715   I$(1)=RIGHT$(STR$(PT),1)
720   FOR PO=0 TO 9
725    I$(2)=RIGHT$(STR$(PO),1)

730    GOSUB 1000

# DM:0 = DOWNLOAD-MODE HTML
# DM:1 = DOWNLOAD-MODE PARSED CONTENT
740    IF DM=0 THEN GOSUB 900
750    IF DM=1 THEN GOSUB 950

810   NEXT
820  NEXT
830 REM NEXT

840 PRINT
850 PRINT "ALL PAGES DOWNLOADED. WAITING FOR INPUT"
860 GOTO 400


#############################
# SAVE CURRENT HTML TO DISK #
#############################
900 FL$=FL$+".HTML"
905 PRINT "SAVING "FL$" ...";
910 BSAVE ("@"+FL$),U(DD),B0,P(RS) TO P(RE)
920 PRINT "DONE"
930 RETURN

###############################
# SAVE PARSED CONTENT TO DISK #
###############################
# INTENDED FOR OFFLINE-MODE. ONLY TAKES 2KB PER PAGE INSTEAD OF HTML SIZE

950 FL$=FL$+".VTX"
955 PRINT "SAVING "FL$" ...";
960 BSAVE ("@"+FL$),U(DD),B0,P(DA) TO P(DA+2024)
970 PRINT "DONE"
980 RETURN

################
# REQUEST HTML #
################
1000 FL$=I$(0)+I$(1)+I$(2)+"-"+S$(0)+S$(1)
1005 PRINT "DOWNLOADING "FL$"... "

1007 IF OM=1 THEN 1080

1010 S=TI
1015 SYS ML,ASC(I$(0)),ASC(I$(1)),ASC(I$(2)),,ASC(S$(0)),ASC(S$(1))
1020 S=TI-S:PRINT "DL TOOK "S" JIFFIES"

#    RL:RESPONSE LENGTH
1030 RL=PEEK(DEC("FB"))+PEEK(DEC("FC"))*256
#    RS:RESPONSE START ADDRESS
1040 RS=C0+2048
#    RE:RESPONSE END ADDRESS
1050 RE=RS+RL

1060 IF RS=0 THEN PRINT "NO CONTENT":RETURN

1070 PRINT "RS="RS",RE="RE",RL="RL

1079 RETURN

###################################
# REQUEST OFFLINE MODE. FROM DISK #
###################################

1080 PRINT "FROM DISK"
1085 BLOAD (FL$+".VTX"),U(DD),B0,P(C0)

1090 BANK 0

#    GET CURRENT SUB PAGE AND MAX SUBPAGE
1092 SX=PEEK(C0+1000):SM=PEEK(C0+1001):IF SM>9 THEN SL=2:ELSE SL=1

1096 RL=2048:BANK15

1099 RETURN

####################################
# EXTRACT NR OF AVAILABLE SUBPAGES #
####################################
# C0 IS THE START OF THE DATA AREA. MAKE C1 OUR WORKING VARIABLE
1100 C1=C0

1105 BANK0

# FIRST, LOOK FOR THE /
1110 DO
1120  V=PEEK(C1):C1=C1+1
1130 LOOP UNTIL V=ASC("/")

# IF SECOND CHARACTER IS STILL A NUMBER, WE HAVE DOUBLE DIGITS. ELSE JUST ONE
1150 V=PEEK(C1+1)
1160 IF V>=ASC("0") AND V<=ASC("9") THEN SM=VAL(CHR$(PEEK(C1))+CHR$(V)):SL=2:GOTO 1190

1170 SM=VAL(CHR$(PEEK(C1))):SL=1

#1180 PRINT "SUBPAGES:"SX"/"SM",SL="SL

1180 IF DM=2 THEN POKE DA+1000,SX:POKE DA+1001,SM

1190 BANK 15

1199 RETURN

####################
# DECREASE SUBPAGE #
####################
1200 SX=SX-1
1210 IF SX<1 THEN SX=SM

1220 GOSUB 1320:GOTO300

####################
# INCREASE SUBPAGE #
####################
1300 GOSUB 1305:GOTO300

1305 SX=SX+1
1310 IF SX>SM THEN SX=1

# SL=SUBPAGE STRING LENGTH
1320 V$=MID$(STR$(SX),2)
# JUST IN CASE PART OF A PAGENUMBER WAS TYPED ALREADY, RESET THAT
1325 IX=0
1330 IF SX>9 THEN SL=2:S$(0)=LEFT$(V$,1):S$(1)=RIGHT$(V$,1):S$=S$(0)+S$(1):GOTO 1350
# IF SX<=9
1340 S$(0)="0":S$(1)=V$:S$=S$(1):SL=1
1350 VMP S(R)+10,S$:VMF A(R)+10,DEC("B0"),SL+SL
1399 RETURN


#############
# LOOP MODE #
#############
# LOADS A DEFINED PAGE.
# AFTER 1 MINUTE, EITHER GO TO NEXT SUB-PAGE, OR TO NEXT PAGE
# WHEN A DEFINED END-PAGE IS REACHED, START OVER WITH THE INITIAL PAGE
# THIS SHOULD TAKE ADVANTAGE OF DOUBLE BUFFERING

# LM:LOOP-MODE
# LP(2):LOOP-PAGE. 0:START PAGE, 1:END PAGE, 2:CURRENT PAGE, 3:CURRENT SUB-PAGE
# LI:LOOP TIMESTAMP
1400 LM=-1
1420 LP(0)=830:LP(1)=861:LP(2)=LP(0):LP(3)=1


#####
# EXECUTE LOOP
####

# CONVERT LP(2) TO I$()
1510 LP$=MID$(STR$(LP(2)),2)
1520 FOR X=0TO2
1530  I$(X)=MID$(LP$,X+1,1)
1540 NEXT

1550 GOTO 300


1600 VMP S(R)+20,"DEMO"
1605 LI=TI

1610 IF SX+1<=SM THEN SX=SX+1:GOTO1620
1615 SX=1:LP(2)=LP(2)+1:
1616 IF DM>0 AND LP(2)>LP(1) THEN LM=0:GOTO405
1617 IF LP(2)>LP(1) THEN LP(2)=LP(0)

#    IF A DUMP MODE IS ACTIVE, GO THROUGH PAGES AS QUICKLY AS POSSIBLE
1620 IF DM>0 THEN 1635

1625 GET I$:IF LEN(I$)>0 THEN LM=0:VMP S(R)+20,"    ":GOTO 405
1630 IF TI-LI<600 THEN 1620

1635 GOSUB 1320:GOTO 1510


####################
# DISPLAY QR-CODE #
####################
1700 IF F THEN FAST

# COPY SCREENBUFFER TO BACKBUFFER
1705 VMC S(R),S(ABS(R-1)),18000:VMC A(R),A(ABS(R-1)),2000

# CREATE CLEAR BACKGROUND FOR QR-CODE (9 TEXTLINES, STARTING AT LINE 9)
1710 VMF S(R)+3+9*720,255,74,99,80
1715 VMF A(R)+3+9*80,DEC("0E"),74,11,80

1720 VMP S(R)+17*720+22,"ERSTELLE QR-CODE..."

# CREATE QR-CODE
1725 S=TI:SYS ML+9:S=TI-S:RREGRA,RX,RY
1730 QL=RX+RY*256:QS=RA
1735 UL=PEEK(DEC("FB"))+PEEK(DEC("FC"))*256

1740 PRINT "CREATE QR TOOK "S" JIFFIES"

# WRITE URL
1745 VMB S(R)+17*720+6,UL+8,34
1750 VMP S(R)+18*720+320+32,"- TASTE -"

#1730 PRINT "LOC: $"HEX$(QL)",SIZE: "QS

# COPY QR CODE FROM RAM TO VRAM
1755 RTV QL,40000,QS*QS


# COPY QR-CODE TO SCREENBUFFER
1760 VMC 40000,S(R)+SO+1+160,QS,QS,160
1765 VMC 40000,S(R)+SO+1+80+160,QS,QS,160

1769 SLOW


1770 GETKEY I$
1775 R=ABS(R-1):DISP S(R):ATTR A(R)
1780 GOTO400


######################
# DUMP MODE HANDLING #
######################

1800 DM=DM+1
1810 IF DM>2 THEN DM=0
1820 PRINT "DUMP MODE:"DM" "DM$(DM)
1830 OM=0:TX$="SPEICHER MODUS:"+DM$(DM):GOTO 1930

#########################
# OFFLINE MODE HANDLING #
#########################
1900 OM=ABS(OM-1)
1910 PRINT "OFFLINE MODE:"OM
1915 IF DM>0 THEN DM=0:PRINT "DUMP MODE DISABLED AUTOMATICALLY"
1920 IF OM=1 THEN TX$="  OFFLINE MODUS    "
1925 IF OM=0 THEN TX$="                   "
1930 VMP S(R)+42,TX$
1940 GOTO 400


#####################
# HANDLE INIT ERROR #
#####################
2000 PRINT:SLOW:F=0
2005 IF RV=1 THEN PRINT "WIC64 NOT FOUND"
2010 IF RV=2 THEN PRINT "WIC64 FIRMWARE TOO OLD. PLEASE UPGRADE."
2020 PRINT "SWITCHING TO OFFLINE MODE"
2030 OM=1
2099 RETURN

################
# PROBLEM PAGE #
################
2100 GOSUB 500
2105 DISP S(R):ATTR A(R)
2110 VMP S(R)+1440,"SEITE KONNTE NICHT GELADEN WERDEN"
2120 VMP S(R)+2160,"R UM NOCHMAL ZU VERSUCHEN"
2125 VMP S(R)+2880,"S UM ZUR STARTSEITE ZU GEHEN"
2130 IF OM=0 THEN VMP S(R)+3600,"O UM DEN OFFLINE MODUS ZU NUTZEN"
2140 VMP S(R)+4320,"X UM ZU BEENDEN"
2150 SLOW

2160 GETKEY I$
2170 IF I$="R" THEN 300

# SET TO OFFLINE AND RELOAD PAGE
2180 IF I$="O" THEN OM=1:GOTO300

2185 IF I$="S" THEN I$(0)="1":I$(1)="0":I$(2)="0":GOTO 300

2190 IF I$="X" THEN SLOW:END

2199 GOTO 2160


#############
# HELP PAGE #
#############
2200 TP=18000-720
2210 VMF S(0)+TP,0,720:VMF S(1)+TP,0,720
2220 VMF A(0)+1920,DEC("E0"),80:VMF A(1)+1920,DEC("E0"),80
2230 VMP S(0)+TP,"0-9 +/-:SEITE,R:REFRESH,O:OFFLINE,X:EXIT"
2240 VMP S(1)+TP,"Q:QR-CODE, F:1/2 MHZ, L:LOOP, D:AUF DISK"
2290 RETURN


# ER
# 4: FILE NOT FOUND
# DS
# 74: DRIVE NOT READY

60000 SLOW
60010 IF ER=4 THEN PRINT "DATEI NICHT GEFUNDEN.":GOTO 61000
60020 PRINT ERR$(ER)
60099 END

# DRIVE ERRORS
61000 IF DS=74 THEN PRINT "LAUFWERK NICHT BEREIT. BITTE DISK EINLEGEN."
61010 IF DS=62 THEN RESUME 2100

61080 PRINT "TASTE ZUM WIEDERHOLEN"
61090 GETKEY I$
61099 RESUME

