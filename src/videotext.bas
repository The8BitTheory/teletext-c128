#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0 VDC,uppercase,10,10
5 ML=DEC("2600"):BE=PEEK(4624)+PEEK(4625)*256
7 IF ML<=BE THEN PRINT "BASIC PROGRAM TOO LARGE. ENDS AT $"HEX$(BE):END

10 GRAPHIC0:DD=PEEK(186)
#15 PRINT "INSERT DISK AND PRESS KEY TO CONTINUE":GETKEY I$

20 PRINT"LOADING VDCBASIC...";:BLOAD"VDCBASIC2G.1300",U(DD),B0:PRINT"DONE"
22 SYS DEC("1300")

#  RESET VDC-CHIP. JUST IN CASE THIS WASN'T A FRESH START
23 RST 3

25 SF=RGD(255)
30 IF SF=0 THEN PRINT "64KB VRAM BENOETIGT, SORRY.":END

# GET NR OF SCREEN ROWS. 32 MEANS NTSC, 39 MEANS PAL
35 TN=RGD(4)

# REG 4*REG 9 = 320
# 35*9=315

# 4: TOTAL NR OF SCREEN ROWS (DEFAULT: 39 FOR PAL) -> 35
# 5: VERT FILLER: 5
# 6: VISIBLE NR OF SCREEN ROWS (DEFAULT: 25). WE WANT 26?
# 9: SCANLINES PER CHARACTER: (DEFAULT: 7) WE WANT 9 (VALUE 8). NEEDED FOR ATTRIBUTE-RAM.

40 RGO 28,16:REM 64K VRAM
42 RGO 25,128:REM BITMAP MODE ON

# REGISTER 4
# 35 CHARACTERLINES FOR PAL
# 29 CHARACTERLINES FOR NTSC
#44 RGW 4,35

# REGISTER 5
# 5 EXTRA LINES FOR PAL
# 3 EXTRA LINES FOR NTSC
#46 RGW 5,5

44 IF TN=39 THEN RGW4,35:RGW5,5
46 IF TN=32 THEN RGW4,29:RGW5,3


48 RGW 9,8
#49 RGW 1,78

50 RGW 36,0
52 DISP 0:ATTR 18000

#  CLEAR SCREEN
60 GOSUB 500

# I$() HOLDS THE THREE DIGITS FOR THREE PAGES
# IX HOLDS THE CURRENTLY ENTERED DIGIT (0-2)
80 DIM I$(2):I$(0)="1":I$(1)="0":I$(2)="0":IX=0:F=-1

# IZ:INPUT LOW (MIN ALLOWED VALUE)
# IO:INPUT ONE (MIN ALLOWED VALUE FOR FIRST DIGIT)
# IH:INPUT HIGH (MAX ALLOWED VALUE)
85 IZ=ASC("0"):IH=ASC("9"):IO=ASC("1")

100 

#   LOAD CHARSET AND COPY IT TO VRAM
110 BLOAD"TXTCHARSET3.VDC",B0,P(BE+3072)
120 FL=PEEK(174)+PEEK(175)*256-BE
130 RTV BE+3072,56*1024,FL
140 VCS 56*1024,2,9,80

200 BLOAD"C128TEXT.BIN",B0

#   INIT MAKES SURE TO WRITE IMPORTANT MEMORY ADDRESSES TO $FD
210 SYS ML+6

#   READ ADDRESS OF LOCAL TIME
211 LT=PEEK(DEC("FB"))+PEEK(DEC("FC"))*256
212 PRINT "LOCAL TIME AT $"HEX$(LT)

#   READ ADDRESS OF HTML CONTENT
214 C0=PEEK(DEC("FD"))+PEEK(DEC("FE"))*256
215 PRINT:PRINT "CONTENT AT "HEX$(C0)

#   GET IP
#220 SYS ML+3

#   REQUEST PAGE 100
300 VMP 10,"HOLE SEITE..."
302 IF F THEN FAST

310 GOSUB 1000

#   CLEAR SCREEN
315 GOSUB 500

320 IF RL=0 THEN VMP 0,"SEITE KONNTE NICHT GELADEN WERDEN":GOTO400

#   WRITE CURRENT PAGE NR
322 FOR X=0 TO 2
324  VMP X+X,I$(X)
326 NEXT

#   WRITE LOCAL TIME
328 VMB 42,LT,19

#   DISPLAY LAST REQUESTED PAGE
#   PRINT LINES TO VRAM

330 P=720:CT=C0:S=TI:Q=C0+1024:QT=18080
335 FOR X=0TO23
340  VMB P,CT,39
345  CT=CT+39:P=P+720
350 NEXT

# COPY 1000 BYTES OF ATTRIBUTE-RAM TO VRAM
355 RTV C0+1024,40000,1000

360 AS=40000:AD=18080

# COPY ATTRIBUTE-RAM. WE HAVE TO DOUBLE EACH BYTE
#  COPY FROM C0+1024 TO 18080, 1 BYTE, REPEAT 250 TIMES, TARGET ADDRESS INCR 2
#  COPY FROM C0+1024 TO 18081, 1 BYTE, REPEAT 250 TIMES, TARGET ADDRESS INCR 2
#  DO THIS 4 TIMES, INCREASING SOURCE AND TARGET ADDRESSES BY 250

365 FOR X=0 TO 22
370  VMC AS,AD,1,39,2:VMF AD+78,0,2
375  VMC AS,AD+1,1,39,2
380  AS=AS+39:AD=AD+80
385 NEXT

# LOAD NAV-DATA TO KNOW ABOUT SUBPAGES
390 I=ASC(I$(0))OR128
392 I$(0)=CHR$(I)

#   GET NAVPAGE WITHOUT PARSING FILENAME ETC
393 GOSUB 1010
#   PRINT TO TOP ROW (EG 1/3)
394 VMB 10,C0,5



#395 I=ASC(I$(0))AND127:I$(0)=CHR$(I)

397 S=TI-S:SLOW
399 PRINT "COPY TO VRAM TOOK "S" JIFFIES"

#   GET USER INPUT
400 GETKEY I$

#   IL = LOWEST ALLOWED INPUT VALUE
415 I=ASC(I$):IF IX=0 THEN IL=IO: ELSE IL=IZ

#   DIGITS. AFTER 600, GOES TO EITHER 400 (MORE DIGITS) OR 300 (LOAD PAGE)
420 IF I>=IL AND I<=IH THEN GOTO 600

#   DOWNLOAD ALL PAGES
440 IF I$="D" THEN 700
445 IF I$="W" THEN GOSUB900:GOTO400
450 IF I$="X" THEN END
460 IF I$="R" THEN 300
470 IF I$="F" THEN PRINT "FAST MODE ON":F=-1:GOTO 400
475 IF I$="S" THEN PRINT "FAST MODE OFF":F=0:GOTO 400

498 PRINT CHR$(7);
499 GOTO 400

################
# CLEAR SCREEN #
################
# FIRST LINE (WHITE TEXT ON BLACK BACKGROUND)
500 VMF 0,255,720
510 VMF 18000,DEC("F0"),80

#  BODY OF PAGE (LINES 1-25)
520 VMF 720,0,18000-720
530 VMF 18080,DEC("0F"),1920

599 RETURN


######################
# HANDLE DIGIT INPUT #
######################

600 I$(IX)=I$
#610 PRINT IX":"I$"/"I
610 VMP IX+IX,I$
620 VMF 18000+IX+IX,DEC("B0"),2
630 IX=IX+1

#   LESS THAN 3 DIGITS, WAIT FOR NEXT INPUT
640 IF IX<=2 THEN 400
#   3 DIGITS ENTERED, LOAD PAGE
650 IF IX>2 THEN IX=0:GOTO 300


######################
# DOWNLOAD ALL PAGES #
######################
# THE HTML VERSION, NOT THE PARSED ONE.
# SO WE CAN PRESERVE THE ORIGINAL STATE AND IMPROVE THE PARSER ON THAT
# PH:PAGE HUNDRED
# PT:PAGE TEN
# PO=PAGE ONE
700 REM FOR PH=1 TO 9
705  I$(0)="8":REM I$(0)=RIGHT$(STR$(PH),1)
710  FOR PT=3 TO 5
715   I$(1)=RIGHT$(STR$(PT),1)
720   FOR PO=0 TO 9
725    I$(2)=RIGHT$(STR$(PO),1)

730    GOSUB 1000

780    GOSUB 900

810   NEXT
820  NEXT
830 REM NEXT

840 PRINT
850 PRINT "ALL PAGES DOWNLOADED. WAITING FOR INPUT"
860 GOTO 400


#############################
# SAVE CURRENT HTML TO DISK #
#############################
900 PRINT "SAVING "FL$;
910 BSAVE ("@"+FL$),B0,P(RS) TO P(RE)
920 PRINT "DONE"
930 RETURN


1000 FL$=I$(0)+I$(1)+I$(2)+".HTML"
1005 PRINT "DOWNLOADING "FL$"... ":S=TI
1010 SYS ML,ASC(I$(0)),ASC(I$(1)),ASC(I$(2))
1020 S=TI-S:PRINT "DONE. TOOK "S" JIFFIES"

#    RL:RESPONSE LENGTH
1030 RL=PEEK(DEC("FB"))+PEEK(DEC("FC"))*256
#    RS:RESPONSE START ADDRESS
1040 RS=C0+2048
#    RE:RESPONSE END ADDRESS
1050 RE=RS+RL

1060 IF RS=0 THEN PRINT "NO CONTENT":RETURN

1070 PRINT "RS="RS",RE="RE",RL="RL

1080 RETURN



